# /opt/analytics-backend/docker-compose.yml
version: "3.8"

networks:
  default:
    name: global_web_proxy_network # Имя общей сети, созданной глобальным Traefik
    external: true

volumes: # Определяем именованный том для логов
  analytics_app_logs:
    name: analytics_backend_logs_data # Уникальное имя тома на хосте

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "analytics_backend_app_instance" # Уникальное имя контейнера
    restart: unless-stopped
    env_file:
      - .env
    volumes: # Монтируем том для логов
      - analytics_app_logs:/usr/src/app/logs # Связываем именованный том с директорией логов внутри контейнера
      # Если предпочитаете монтировать локальную папку относительно docker-compose.yml:
      # - ./logs_on_host:/usr/src/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=global_web_proxy_network"

      - "traefik.http.routers.analytics-http.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.analytics-http.entrypoints=web"
      - "traefik.http.routers.analytics-http.middlewares=analytics-redirect-https@docker"

      - "traefik.http.middlewares.analytics-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.analytics-redirect-https.redirectscheme.permanent=true"

      - "traefik.http.routers.analytics-https.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.analytics-https.entrypoints=websecure"
      - "traefik.http.routers.analytics-https.tls=true"
      - "traefik.http.routers.analytics-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.analytics-https.service=analytics-service"

      - "traefik.http.services.analytics-service.loadbalancer.server.port=3000"